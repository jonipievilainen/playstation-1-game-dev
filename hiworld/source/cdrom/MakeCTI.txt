MakeCTI v1.0
by Murphy McCauley


Terrible ReadMe
---------------

MakeCTI is a little program that looks through a folder, and then builds a CTI file (suitable for use with BUILDCD) containing all the files and folders within it.  This way, you can build a model of the filesystem you want on your CD, run MakeCTI, run BUILDCD, and then run STRIPISO/StripISOToo -- presto, your ISO image is ready for burning.

I have used MakeCTI quite a bit, and I know it works for what I use it for (making discs full of STR movies, emulators, demos, etc.).  I have done quite a bit of testing.  So I am releasing it now as v1.0.  However, it could definitely use the polishing (the configuration file stuff is weak, so I haven't even documented most of it -- it should be completely redone).  I should do the polishing before releasing it, but since it works for what I use it for -- I may never bother.  So I'm releasing it now.  If you want more flexibility and stuff -- email me, and I'll try to put out a version 2 (or release the sourcecode).  



MakeCTI has a couple handy features:

1. You can force any file to be encoded in Form 2.

Certain file types must be encoded in Mode 2 Form 2.  For example, .STR movies and .XA audio.  You can set whatever extensions (i.e. .str, .xa) you want in the configuration file.  You can also force any particular file to be stored in Form 2 by putting a "~" in front of its filename (the "~" will be removed when the CD image is built).  Be sure not to have a file called something like "blah" and another called "~blah".  This will cause problems. =)


2. Shortcuts will be followed.

If you put a shortcut in your model filesystem, the original file will be used in the CD image.  So if you make a shortcut to C:\EmptyFile.BIN and call the shortcut "ZNULL.DAT", then EmptyFile.BIN will show up as ZNULL.DAT on the CD.  This will not work with directories.



You can create various configuration files in the same directory as the EXE, and they will be read if you use the /CFG commandline switch.  For the most part, these configuration files are just replacements for the built-in strings of text that MakeCTI uses to compose the CTI.  Call these files: Footer.CFG, File.CFG, Form2 File.CFG, and Header.CFG.  In them, the character "%" will be replaced with info (file names, etc.).  I know this sucks, but it's what's in there at the moment, and it's at least SORT OF flexible.

If you have a configuration file called "Form2 Extensions.CFG", it should be a list of filename extensions, each on their own line (i.e. ".xa<Newline>.str<NewLine>...").  All files of these types will be Form2 encoded.

If you're making PSX CDs, you should probably include the /SA commandline argument, which should be followed by a "license" file.  This should be in 2352 byte per sector format ("Raw"), and should be 16 sectors (37,632 bytes total), I think.  Note that many of the license files out there (and many generated by various license tools) have incorrect ECC data, so it might be wise to run ECCRegen on them.  It may not matter, depending on your burner and possibly your burning software.  If you don't have a license file, I think you could just rip the first 16 sectors off of a valid CD.  If the license filename starts with a forward slash ("/"), MakeCTI will assume the license file is in the same directory as the MakeCTI EXE.  So you could use "/SA /infousa.dat".


MMcCauley@FullSpectrum.Com (Be sure to put "Deeth" somewhere in the subject line!)
September 2002